/* - increments the build number in the first found resource file
 *  (extension .rc ) of the project AFTER each build
 *	Author: Matthias Seemann (2004)
 */
import IDE;
import scriptEngine;
//
// Load support module(s).
//
if (!scriptEngine.IsLoaded("file")) scriptEngine.Load("file");


on IDE:>BuildComplete(status, inputPath, outputPath)
{
   if (!status)
   {
   	return;
   }
   declare project = new ProjectNode();

   declare exe = new ProjectNode(project.ChildNodes[0]);
   declare current;
   declare sName;
   declare tmpNode;
   iterate (tmpNode; exe.ChildNodes)
   {
      current = new ProjectNode(tmpNode);
      sName = new String(current.Type);
      if (sName.Index(".rc") > 0)
      {
   		//IDE.Message(current.InputName);

         declare rcFile = new TFlatFile(current.InputName);

         /* declare aLines = rcFile.GetLines("FILEVERSION");
         declare sLine;
         iterate(sLine; aLines)
         {
         	IDE.Message(sLine);
         }
         delete sLine;
         delete aLines;
         */

         rcFile.EdPos.Move(1,1);
         if (!rcFile.EdPos.Search("VERSIONINFO", TRUE, FALSE))
         	break;
         if (!rcFile.EdPos.Search("FILEVERSION", TRUE, FALSE))
         	break;
         //IDE.Message(rcFile.EdPos.Search("FILEVERSION", TRUE, FALSE));
         rcFile.EdPos.Search(",", TRUE, FALSE);
         rcFile.EdPos.Search(",", TRUE, FALSE);
         rcFile.EdPos.Search(",", TRUE, FALSE);

         declare sIn = new String(rcFile.EdPos.RipText(" 0123456789",
         	INCLUDE_NUMERIC_CHARS));

         //IDE.Message(sIn.Text);

         declare iTextLength = sIn.Length;
         //IDE.Message(iTextLength);

         sIn.Trim(TRUE);

         declare iNumber = sIn.Integer;

         //IDE.Message(iNumber);

         iNumber = iNumber + 1;

         //IDE.Message(iNumber);

         //IDE.Message(rcFile.EdPos.Row);
         //IDE.Message(rcFile.EdPos.Column);

         sIn.Integer = iNumber;

         rcFile.EdPos.InsertText(" ");
         rcFile.EdPos.InsertText(sIn.Text);

         rcFile.EdPos.Delete(iTextLength);

         delete iTextLength;
         delete iNumber;
         delete sIn;

         rcFile.Close(TRUE);

         delete rcFile;

         break;
      }
      delete sName;
      delete current;
   }
   delete sName;
   delete tmpNode;
   /*declare i;
   for (i = 0; i < 2 ; i++)
   {
   	IDE.Message(project.ChildNodes[i] + project.ChildNodes[i].Type);
   }
   delete i;*/
   delete current;
   delete exe;
   delete project;
}


